// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PlaybookPage /> renders correctly when empty 1`] = `
<View
  onLayout={[Function]}
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingBottom": 0,
      },
    ]
  }
>
  <View
    style={
      {
        "marginTop": "30%",
        "padding": 30,
      }
    }
  >
    <Text
      style={
        {
          "fontSize": 16,
          "marginBottom": 50,
          "textAlign": "center",
        }
      }
    >
      Your playbook is empty!
    </Text>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "borderTopColor": "#e5e5e5",
        "borderTopWidth": 1,
        "opacity": 1,
        "paddingBottom": 20,
        "paddingTop": 10,
      }
    }
    testID="createPlay"
  >
    <View
      style={
        {
          "alignItems": "center",
          "borderColor": "#2a9e91",
          "borderRadius": 25,
          "borderWidth": 1,
          "height": 50,
          "justifyContent": "center",
          "width": 50,
        }
      }
    >
      <Text />
    </View>
  </View>
</View>
`;

exports[`<PlaybookPage /> renders correctly with plays 1`] = `
<View
  onLayout={[Function]}
  style={
    [
      {
        "backgroundColor": "#fff",
        "flex": 1,
      },
      {
        "paddingBottom": 0,
      },
    ]
  }
>
  <RCTScrollView>
    <View>
      <View
        style={
          [
            {
              "flex": 1,
              "flexDirection": "row",
            },
            {
              "height": 60,
              "paddingLeft": 20,
            },
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "flex": 1,
              "flexBasis": "100%",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              {
                "fontSize": 16,
                "fontWeight": "bold",
              }
            }
          >
            title
          </Text>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "justifyContent": "center",
              "opacity": 1,
              "padding": 10,
            }
          }
          testID="edit"
        >
          <Text />
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "justifyContent": "center",
              "opacity": 1,
              "padding": 10,
            }
          }
          testID="delete"
        >
          <Text />
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "borderTopColor": "#e5e5e5",
        "borderTopWidth": 1,
        "opacity": 1,
        "paddingBottom": 20,
        "paddingTop": 10,
      }
    }
    testID="createPlay"
  >
    <View
      style={
        {
          "alignItems": "center",
          "borderColor": "#2a9e91",
          "borderRadius": 25,
          "borderWidth": 1,
          "height": 50,
          "justifyContent": "center",
          "width": 50,
        }
      }
    >
      <Text />
    </View>
  </View>
</View>
`;
