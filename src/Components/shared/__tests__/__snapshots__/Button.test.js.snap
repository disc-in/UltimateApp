// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Button /> renders correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#2a9e91",
      "borderRadius": 5,
      "flexDirection": "row",
      "height": 40,
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 10,
      "width": "80%",
    }
  }
  testID="button"
>
  <Text
    style={
      {
        "color": "#fff",
        "fontSize": 16,
        "textAlign": "center",
      }
    }
  >
    OK
  </Text>
</View>
`;

exports[`<Button /> renders correctly when light 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "borderColor": "#2a9e91",
      "borderRadius": 5,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 40,
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 10,
      "width": "80%",
    }
  }
  testID="button"
>
  <Text
    style={
      {
        "color": "#2a9e91",
        "fontSize": 16,
        "fontWeight": "bold",
      }
    }
  >
    OK
  </Text>
</View>
`;

exports[`<Button /> renders correctly when small 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "alignSelf": "center",
      "backgroundColor": "#2a9e91",
      "borderRadius": 5,
      "flexDirection": "row",
      "height": 30,
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 10,
      "paddingVertical": 0,
      "width": "auto",
    }
  }
  testID="button"
>
  <Text
    style={
      {
        "color": "#fff",
        "fontSize": 16,
        "textAlign": "center",
      }
    }
  >
    OK
  </Text>
</View>
`;

exports[`<Button /> renders correctly with an icon 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#2a9e91",
      "borderRadius": 5,
      "flexDirection": "row",
      "height": 40,
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 10,
      "width": "80%",
    }
  }
  testID="button"
>
  <Text />
  <Text
    style={
      {
        "color": "#fff",
        "fontSize": 16,
        "textAlign": "center",
      }
    }
  >
    OK
  </Text>
</View>
`;
